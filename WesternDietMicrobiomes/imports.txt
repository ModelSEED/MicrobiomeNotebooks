./degenerate_models_statistics.ipynb:    "with open(\"model_gcf_mapping.json\", \"w\") as jsonOut: dump(model_gcf_mapping, jsonOut, indent=3)\n",
./degenerate_models_statistics.ipynb:    "with open(\"AGORA2 to ASV Exact Matches/AGORA2_6_14_23_16S_ASV_to_Genome.json\", \"r\") as jsonIn:  asv_to_genomes = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "with open(\"unique_asv_mappings.json\", \"w\") as jsonOut:  dump(unique_asv_mappings, jsonOut, indent=3)"
./degenerate_models_statistics.ipynb:    "with open(\"model_gcf_mapping.json\", \"r\") as jsonIn: model_gcf_mapping = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "with open(\"AGORA2 to ASV Exact Matches/AGORA2_6_14_23_16S_ASV_to_Genome.json\", \"r\") as jsonIn:  asv_to_genomes = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "with open(\"unique_asv_mappings.json\", \"r\") as jsonIn:  unique_asv_mappings = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "    with open(f\"reaction_counts_per_asv/{asv}.json\", \"w\") as jsonOut:   dump(reaction_counts_per_asv, jsonOut, indent=3)\n",
./degenerate_models_statistics.ipynb:    "with open(\"asv_model_print_output.txt\", \"r\") as models_output:\n",
./degenerate_models_statistics.ipynb:    "    with open(f'/vol/ml/AGORA2/{modelName}.xml', 'rb') as file:  sbytes=file.read()\n",
./degenerate_models_statistics.ipynb:    "    with open(f'/vol/ml/AGORA2/{modelName.strip()}.xml', 'w') as file:  file.write(sbytes.decode(\"utf-8\"))"
./degenerate_models_statistics.ipynb:    "with open(\"/home/afreiburger/token\") as token_file:\n",
./degenerate_models_statistics.ipynb:    "with open(\"model_gcf_mapping.json\", \"r\") as jsonIn: model_gcf_mapping = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "with open(\"unique_asv_mappings.json\", \"r\") as jsonIn:  unique_asv_mappings = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "# with open(\"broken_model_gcfs.npy\", \"r\") as aryIn:  broken_model_gcfs = npload(aryIn)\n",
./degenerate_models_statistics.ipynb:    "    with open(f\"reaction_counts_per_asv/{asv}.json\", \"r\") as jsonIn:  asv_mappings = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "with open(f\"reaction_counts_per_asv/all_models.json\", \"w\") as jsonOut:\n",
./degenerate_models_statistics.ipynb:    "with open(f\"reaction_counts_per_asv/all_models.json\", \"w\") as jsonOut:\n",
./degenerate_models_statistics.ipynb:    "with open(f\"reaction_counts_per_asv/all_models.json\", \"r\") as jsonIn:\n",
./degenerate_models_statistics.ipynb:    "with open(\"/home/afreiburger/token\") as token_file:\n",
./degenerate_models_statistics.ipynb:    "# tms = read_csv(\"./metabolomics data/Bigg_mapped_tms.csv\").drop(\"Unnamed: 0\", axis=1)\n",
./degenerate_models_statistics.ipynb:    "complete = read_csv(\"../../metabolomics data/complete_mapping_metabolomics.csv\").drop(\"Unnamed: 0\", axis=1).set_index(\"SampleName\")\n",
./degenerate_models_statistics.ipynb:    "scfa = read_csv(\"../../metabolomics data/Bigg_mapped_quantitative_scfa.csv\").drop(\"Unnamed: 0\", axis=1).set_index(\"SampleName\")\n",
./degenerate_models_statistics.ipynb:    "wd_metadata = read_csv(\"../../metabolomics data/wd_meta_merged.csv\").set_index(\"sampleID\")\n",
./degenerate_models_statistics.ipynb:    "metadata = read_csv(\"../../metabolomics data/metabolomics_meta.csv\").set_index(\"Sample.ID\")#.drop(\"Unnamed: 0\", axis=1)\n",
./degenerate_models_statistics.ipynb:    "# total_df = read_csv(\"metabolomics data/all_metabolomic_data.csv\")#.set_index(\"SampleName\")\n",
./degenerate_models_statistics.ipynb:    "ave_total_df = read_csv(\"../../metabolomics data/day_averaged_concentrations_recDay.csv\").drop(\"Unnamed: 0\", axis=1)\n",
./degenerate_models_statistics.ipynb:    "# ave_total_df = read_csv(\"../../metabolomics data/day_averaged_concentrations.csv\")\n",
./degenerate_models_statistics.ipynb:    "with open(\"/Users/afreiburger/Documents/ModelSEEDpy/examples/Community Modeling/smetana/BiGG_to_MSID.json\") as jsonIn:  biggMSID = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "old_changes_df = read_csv(\"/Users/afreiburger/Downloads/metabolomics_log2_fold_change.csv\")\n",
./degenerate_models_statistics.ipynb:    "metadata_16s = read_csv(\"metabolomics data/16s_metadata.csv\").set_index(\"sampleID\")\n",
./degenerate_models_statistics.ipynb:    "mega_metadata = read_csv(\"metabolomics data/a1_meta_c1-3.csv\").set_index(\"seqID\")\n",
./degenerate_models_statistics.ipynb:    "# asv_abundances = asv_abundances if \"asv_abundances\" in locals() else read_csv(\"metabolomics data/merged_otu_table.txt\", sep=\"\\t\").set_index(\"taxonID\")\n",
./degenerate_models_statistics.ipynb:    "asv_abundances = read_csv(\"metabolomics data/merged_otu_table.txt\", sep=\"\\t\").set_index(\"taxonID\")\n",
./degenerate_models_statistics.ipynb:    "kathleens_average = read_csv(\"metabolomics data/mean_abund_perDay_perTreatment_50.csv\")\n",
./degenerate_models_statistics.ipynb:    "averaged_asv_vals = read_csv(\"metabolomics data/averaged_asv_values.csv\").set_index(\"taxonID\")\n",
./degenerate_models_statistics.ipynb:    "with open(\"metabolomics data/averaged_asv_abundances_interday_mapping.json\", 'w') as jsonOut:\n",
./degenerate_models_statistics.ipynb:    "with open(\"metabolomics data/averaged_asv_abundances_interday_mapping.json\", 'r') as jsonIn:  asv_dict = load(jsonIn)\n",
./degenerate_models_statistics.ipynb:    "changes_df = read_csv(\"metabolomics data/metabolomics differences.csv\").set_index(\"day_diet diff\") if \"changes_df\" not in locals() else changes_df\n",
./degenerate_models_statistics.ipynb:    "        with open(fna_path, \"r\") as fnaIn:  fna = fnaIn.read()\n",
./degenerate_models_statistics.ipynb:    "    with open(\"AGORA2_genomes/FNAs/\"+fna_path.split(\"/\")[-1], \"w\") as fnaOut:   fnaOut.write(fna)"
./degenerate_models_statistics.ipynb:    "solutions_csv = read_csv(\"solutions.csv\").set_index(\"Unnamed: 0\")\n",
./ASVCommunityModeling.ipynb:    "with open('data/16s_RNA_PATRIC.frn', 'r') as file:\n",
./ASVCommunityModeling.ipynb:    "with open('genomelist.txt', 'r') as file:\n",
./ASVCommunityModeling.ipynb:    "with open('data/asvgenomes.txt', 'r') as file:\n",
./ASVCommunityModeling.ipynb:    "with open('data/avail_asv_genomes.txt', 'w') as file:\n",
./ASVCommunityModeling.ipynb:    "        ofile = open(\"Assemblies/\"+asvname+\".fasta\", \"w\")\n",
./ASVCommunityModeling.ipynb:    "        with open(util.output_dir+\"/\"+modelid+\".lp\", \"w\") as out:\n",
./ASVCommunityModeling.ipynb:    "        with open(filename, 'w') as f:\n",
./ASVCommunityModeling.ipynb:    "with open(\"clade_fluxes.json\", \"w\") as jsonOut:\n",
./processing_CSVs.ipynb:    "ASV_uptake = read_csv(\"ASVuptakeInteractions.csv\").set_index(\"ASV\")\n",
./processing_CSVs.ipynb:    "ASV_excretion = read_csv(\"ASVexcretionInteractions.csv\").set_index(\"ASV\")\n",
./processing_CSVs.ipynb:    "ASV_growth = read_csv(\"ASVgrowthInteractions.csv\").set_index(\"ASV\")\n",
./processing_CSVs.ipynb:    "ASV_Angrowth = read_csv(\"ASVagrowthInteractions.csv\").set_index(\"ASV\")\n",
./processing_CSVs.ipynb:    "# fluxes_sample_csvs = [read_csv(csv) for csv in glob(\"Sample*.csv\") if \"_bin\" not in csv]\n",
./processing_CSVs.ipynb:    "# binary_sample_csvs = [read_csv(csv) for csv in glob(\"Sample*.csv\") if \"_bin\" in csv]\n",
./processing_CSVs.ipynb:    "sample_growth = read_csv(\"SamplegrowthInteractions.csv\").set_index(\"Sample\").drop(\"Name\", axis=0).astype(float)\n",
./processing_CSVs.ipynb:    "sample_agrowth = read_csv(\"SampleagrowthInteractions.csv\")\n",
./processing_CSVs.ipynb:    "sample_uptake = read_csv(\"SampleuptakeInteractions.csv\")\n",
./processing_CSVs.ipynb:    "sample_excretion = read_csv(\"SampleexcretionInteractions.csv\")\n",
./processing_CSVs.ipynb:    "with open(\"/Users/afreiburger/Documents/ModelSEEDpy/examples/Community Modeling/smetana/BiGG_to_MSID.json\") as jsonOut:  biggMSID = load(jsonOut)\n",
./processing_CSVs.ipynb:    "firstASV = read_csv(\"ASVexcretionInteractions.csv\")\n",
./processing_CSVs.ipynb:    "firstSample = read_csv(\"SampleexcretionInteractions.csv\")\n",
./processing_CSVs.ipynb:    "secondASV = read_csv(\"ASVexcretion_probInteractions.csv\")\n",
./processing_CSVs.ipynb:    "secondSample = read_csv(\"Sampleexcretion_probInteractions.csv\")\n",
./processing_CSVs.ipynb:    "asvInteractions = read_csv(\"ASVMetaboliteInteractions.csv\")\n",
./processing_CSVs.ipynb:    "sampleInteractions = read_csv(\"SampleIntervalMetaboliteInteractions.csv\")\n",
./processing_CSVs.ipynb:    "df = read_csv(\"ASVMetaboliteInteractions.csv\").set_index(\"ASV\")\n",
./processing_CSVs.ipynb:    "df = read_csv(\"ASVFluxes.csv\").set_index(\"id\")\n",
./processing_CSVs.ipynb:    "with open(\"../../metabolomics data/asv_asvset.json\", 'r') as jsonIn:\n",
./processing_CSVs.ipynb:    "with open(\"../../metabolomics data/asvset_names.json\", 'r') as jsonIn:\n",
./processing_CSVs.ipynb:    "with open(\"named_ASVsets.json\", 'w') as jsonOut:\n",
./processing_CSVs.ipynb:    "with open(\"../../metabolomics data/asvset_names.json\", 'r') as jsonIn:\n",
./processing_CSVs.ipynb:    "taxonomy = read_csv(\"../../metabolomics data/wd_taxonomy.csv\").set_index(\"Feature ID\")\n",
./processing_CSVs.ipynb:    "with open(\"new_asv_taxonomy.json\", 'w') as jsonOut:\n",
./processing_CSVs.ipynb:    "    df = read_csv(df_path).fillna(0)\n",
./processing_CSVs.ipynb:    "    with open(f\"{baseName}_normalcies.json\", 'w') as jsonOut:\n",
./processing_CSVs.ipynb:    "with open(\"asvname_taxonomy.json\", \"r\") as jsonIn:\n",
./processing_CSVs.ipynb:    "    df = read_csv(data_path).set_index(indexName).fillna(0)\n",
./processing_CSVs.ipynb:    "df = read_csv(\"ASVFluxes2.csv\")\n",
./processing_CSVs.ipynb:    "# df = read_csv(\"SampleIntervalMetaboliteInteractions.csv\")\n",
./processing_CSVs.ipynb:    "#         df = read_csv(file)\n",
./processing_CSVs.ipynb:    "    df = read_csv(data_path).set_index(\"ASV\").drop(\"Name\", axis=0).astype(float)\n",
./processing_CSVs.ipynb:    "with open(\"asvname_taxonomy.json\", 'r') as jsonIn:\n",
./processing_CSVs.ipynb:    "    df = read_csv(data_path).set_index(\"ASV\")\n",
./processing_CSVs.ipynb:    "asv_csvs = [read_csv(asv).drop(0, axis=0).set_index(\"ASV\") for asv in glob(\"ASV*.csv\")]\n",
./processing_CSVs.ipynb:    "ave_total_df = read_csv(\"../../metabolomics data/day_averaged_concentrations_recDay.csv\")\n",
./processing_CSVs.ipynb:    "with open(\"/Users/afreiburger/Documents/ModelSEEDpy/examples/Community Modeling/smetana/BiGG_to_MSID.json\") as jsonOut:  biggMSID = load(jsonOut)\n",
./processing_CSVs.ipynb:    "    sample = read_csv(sample_CSV_path).set_index(\"Sample\").drop(\"Name\", axis=0).astype(float)\n",
./processing_CSVs.ipynb:    "with open(\"sample_correlations.json\", \"w\") as jsonOut:    dump(correlations, jsonOut, indent=3)\n",
./processing_CSVs.ipynb:    "    sample = read_csv(sample_CSV_path).set_index(\"Sample\").drop(\"Name\", axis=0).astype(float)\n",
./processing_CSVs.ipynb:    "with open(\"sample_prob_correlations.json\", \"w\") as jsonOut:    dump(prob_correlations, jsonOut, indent=3)\n",
./processing_CSVs.ipynb:    "with open(\"sample_prob_correlations.json\", \"r\") as jsonIn:\n",
./processing_CSVs.ipynb:    "# with open(\"../../CommScores/commscores/data/compoundNames.json\", \"r\") as jsonIn:\n",
./processing_CSVs.ipynb:      "Cell \u001b[0;32mIn [227], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m metabolomics \u001b[38;5;241m=\u001b[39m read_csv(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m../../metabolomics data/day_averaged_concentrations_recDay.csv\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m----> 2\u001b[0m \u001b[38;5;28mprint\u001b[39m([met \u001b[38;5;28;01mfor\u001b[39;00m met \u001b[38;5;129;01min\u001b[39;00m metabolomics\u001b[38;5;241m.\u001b[39mindex \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPBX\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m met])\n",
./processing_CSVs.ipynb:      "Cell \u001b[0;32mIn [227], line 2\u001b[0m, in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m      1\u001b[0m metabolomics \u001b[38;5;241m=\u001b[39m read_csv(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m../../metabolomics data/day_averaged_concentrations_recDay.csv\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m----> 2\u001b[0m \u001b[38;5;28mprint\u001b[39m([met \u001b[38;5;28;01mfor\u001b[39;00m met \u001b[38;5;129;01min\u001b[39;00m metabolomics\u001b[38;5;241m.\u001b[39mindex \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mPBX\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mnot\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mmet\u001b[49m])\n",
./processing_CSVs.ipynb:    "metabolomics = read_csv(\"../../metabolomics data/day_averaged_concentrations_recDay.csv\").set_index(\"Rec_day\")\n",
./processing_CSVs.ipynb:    "# results = read_csv(\"ASVMetaboliteInteractions_names.csv\").set_index(\"ASV\")\n",
./ASV abundance calculation.ipynb:    "ave_total_df = read_csv(\"metabolomics data/day_averaged_concentrations.csv\")\n",
./ASV abundance calculation.ipynb:    "mega_metadata = read_csv(\"metabolomics data/a1_meta_c1-3.csv\").set_index(\"seqID\")\n",
./ASV abundance calculation.ipynb:    "# asv_abundances = asv_abundances if \"asv_abundances\" in locals() else read_csv(\"metabolomics data/merged_otu_table.txt\", sep=\"\\t\").set_index(\"taxonID\")\n",
./ASV abundance calculation.ipynb:    "asv_abundances = read_csv(\"metabolomics data/merged_otu_table.txt\", sep=\"\\t\").set_index(\"taxonID\")\n",
./ASV abundance calculation.ipynb:    "with open(\"asvset_asvs.json\", \"r\") as jsonIn:   asvSet = load(jsonIn)\n",
./ASV abundance calculation.ipynb:    "with open(\"metabolomics data/averaged_asv_abundances_interday_mapping.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "with open(\"WesternDietMicrobiomes/escherMap.json\", \"r\") as jsonIn:    escherMap = load(jsonIn)\n",
./escher_API_mapping.ipynb:    "with open(\"WesternDietMicrobiomes/escherMap_edited.json\", \"w\") as jsonOut:    escherMap = dump(escherMap, jsonOut, indent=3)"
./escher_API_mapping.ipynb:    "    with open(escherJSON_path, \"r\") as jsonIn:\n",
./escher_API_mapping.ipynb:    "    with open(escherJSON_path.replace(\".json\", \"_edited.json\"), \"w\") as jsonOut:  dump(escherMap, jsonOut, indent=3)\n",
./escher_API_mapping.ipynb:    "with open(path, \"r\") as jsonIn:\n",
./escher_API_mapping.ipynb:    "with open(path, \"w\") as jsonOut:\n",
./escher_API_mapping.ipynb:    "with open(\"twoRXN_localized.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "interactions = read_csv(\"ASVMetaboliteInteractions.csv\").set_index(\"ASV\")\n",
./escher_API_mapping.ipynb:    "with open(\"ASV_metabolic_activity_stoich.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "with open(\"metabolomics_categories.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "with open(\"ASVInteractionModel.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "with open(\"ASVInteractionModel_categorizedIDs.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "with open(\"metabolite_focused_map.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "with open(\"Escher_nodeNum_cpdIDs.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "with open(\"EscherNodeMapping.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "with open(\"metabolite_focused_map0.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "    with open(escherPath, 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "    with open(escherPath.replace(\".json\", \"_cleaned0.json\"), 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "# with open(\"metabolite_focused_map_IDs_cleaned.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "# with open(\"metabolite_focused_map_IDs_cleaned0.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "# with open(\"metabolite_focused_map_IDs_cleaned.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "with open(\"ASVInteractionModel.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "with open(\"metabolite_focused_map_IDs_cleaned.json\", 'r') as jsonIn:\n",
./escher_API_mapping.ipynb:    "with open(\"modelSVG_mapping.json\", 'w') as jsonOut:\n",
./escher_API_mapping.ipynb:    "    soup = BeautifulSoup(open(svg_path, \"r\").read() , 'lxml-xml')\n",
./escher_API_mapping.ipynb:    "    # with open(\"output.svg\", \"w\", encoding=\"utf-8\") as file:\n",
./escher_API_mapping.ipynb:    "    with open(svg_path.replace(\".svg\", \"_edited.svg\"), \"w\", encoding=\"utf-8\") as file:\n",
./PATRICNotebook.ipynb:    "with open('data/16s_RNA_PATRIC.frn', 'r') as file:\n",
./PATRICNotebook.ipynb:    "    with open(\"TemplateGenome.json\", 'r') as f:\n",
./PATRICNotebook.ipynb:    "    ofile = open(\"Assemblies/\"+clade+\".fasta\", \"w\")\n",
./PATRICNotebook.ipynb:    "abundance = read_csv(\"MetaT/norm.counts.rpk_edger.bins_mean.csv\")\n",
./PATRICNotebook.ipynb:    "metaT = read_csv(\"MetaT/norm.counts.rpk_edger_geTMM.csv\")\n",
./PATRICNotebook.ipynb:    "        with open(util.output_dir+\"/\"+condition+\".lp\", \"w\") as out:\n",
./PATRICNotebook.ipynb:    "with open(\"clade_fluxes.json\", \"w\") as jsonOut:\n",
./AGORACommunityModeling.ipynb:    "df = pd.read_csv('metabolomics differences.csv')\n",
./AGORACommunityModeling.ipynb:    "metabolomics_data = read_csv('metabolomics differences.csv').set_index(\"day_diet diff\").T.to_dict()"
./AGORACommunityModeling.ipynb:    "    with open(\"constraints.json\", \"r\") as jsonIn:   constraints = load(jsonIn)\n",
./AGORACommunityModeling.ipynb:    "    with open(\"constraints.json\", \"r\") as jsonIn:   constraints = load(jsonIn)\n",
./AGORACommunityModeling.ipynb:    "    with open(\"species_reactions.json\", \"r\") as jsonIn:   species_reactions = load(jsonIn)\n",
./AGORACommunityModeling.ipynb:    "with open(\"nboutput/test.lp\", \"w\") as out:\n",
./Pathway_corrections.ipynb:    "pathways = read_csv(\"AGORA2_pathways.txt\", sep=\"\\t\", encoding = \"ISO-8859-1\")\n",
./Pathway_corrections.ipynb:    "with open(\"rxnID_subsystem.json\", \"w\") as jsonOut:   dump(rxnID_subsystem_dict, jsonOut, indent=3)"
./Pathway_corrections.ipynb:    "with open(\"AGORA2_pathways.txt\", 'rb') as file:\n",
./Pathway_corrections.ipynb:    "        try:   print(read_csv(\"AGORA2_pathways.txt\", sep=\"\\t\", encoding = \"utf-8\"))\n",
./Pathway_corrections.ipynb:    "    fva_table = read_csv(fva)\n",
./Pathway_corrections.ipynb:    "with open(\"/Users/afreiburger/Documents/CommScores/commscores/data/MSDB_xRefs.json\", 'r') as jsonIn:\n",
./Pathway_corrections.ipynb:    "with open(\"/Users/afreiburger/Documents/CommScores/commscores/data/compoundNames.json\", 'r') as jsonIn:\n",
./Pathway_corrections.ipynb:    "with open(\"excreta.txt\", \"w\") as Out:\n",
